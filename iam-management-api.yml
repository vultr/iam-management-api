openapi: 3.0.4
info:
  title: IAM & SCIM Management API
  version: 1.0.0
  description: Complete Identity, Access Management, and SCIM provisioning endpoints for users, groups, roles, policies, and sessions.

tags:
  - name: Organizations
    description: Manage organizations
  - name: SCIM Settings
    description: Manage SCIM enablement and tokens for organizations
  - name: Organization Membership Management
    description: Manage users inside organizations (membership, roles, suspensions)
  - name: Organization Invitations
    description: Manage invitations for users to join organizations
  - name: SCIM Users
    description: SCIM-compliant endpoints for managing users within an organization
  - name: SCIM Groups
    description: SCIM-compliant endpoints for managing groups within an organization
  - name: IAM Groups
    description: Non-SCIM group management endpoints
  - name: IAM Roles
    description: Endpoints for managing IAM roles within an organization
  - name: IAM Policies
    description: Endpoints for managing IAM policies within an organization
  - name: IAM Endpoint Actions
    description: View available IAM endpoint-to-action mappings for policy creation
  - name: IAM Role-Policy Mappings
    description: Manage the attachment and detachment of IAM policies to roles within an organization
  - name: IAM User-Policy Mappings
    description: Manage direct IAM policy attachments to individual users within an organization
  - name: IAM Group-Policy Mappings
    description: Manage direct IAM policy attachments to groups within an organization
  - name: IAM Trust Policies
    description: Manage trust relationships between roles, users, and groups for temporary role assumption
  - name: IAM Assumed Roles
    description: Manage temporary role assumptions for users within an organization

paths:
  # Organizations
  /v2/organizations:
    post:
      tags: [Organizations]
      summary: Create an Organization
      operationId: createOrganization
      description: Create a new organization and initialize SCIM settings.
      responses:
        '201':
          description: Organization created
    get:
      tags: [Organizations]
      summary: List Organizations
      operationId: listOrganizations
      description: List all organizations that belong to the authenticated user.
      responses:
        '200':
          description: List of organizations

  /v2/organizations/{uuid}:
    get:
      tags: [Organizations]
      summary: Get an Organization
      operationId: getOrganization
      description: Retrieve a single organization by its UUID.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization details
    put:
      tags: [Organizations]
      summary: Update an Organization
      operationId: updateOrganization
      description: Update an organization's name (Root role required).
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization updated
    delete:
      tags: [Organizations]
      summary: Soft Delete an Organization
      operationId: softDeleteOrganization
      description: Disable SCIM, expire invites, suspend users, and soft delete the organization.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Organization deleted

  /v2/organizations/{uuid}/restore:
    patch:
      tags: [Organizations]
      summary: Restore an Organization
      operationId: restoreOrganization
      description: Restore a previously soft-deleted organization.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization restored

  # SCIM Settings
  /v2/organizations/{uuid}/scim/enable:
    post:
      tags: [SCIM Settings]
      summary: Enable SCIM for Organization
      operationId: enableSCIM
      description: Enable SCIM provisioning and generate a SCIM token for the organization.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: SCIM enabled

  /v2/organizations/{uuid}/scim/disable:
    post:
      tags: [SCIM Settings]
      summary: Disable SCIM for Organization
      operationId: disableSCIM
      description: Disable SCIM provisioning and remove the SCIM token for the organization.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: SCIM disabled

  /v2/organizations/{uuid}/scim/token:
    post:
      tags: [SCIM Settings]
      summary: Regenerate SCIM Token
      operationId: regenerateSCIMToken
      description: Regenerate and return a new SCIM token for the organization.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: SCIM token regenerated

  # Organization Membership Management
  /v2/organizations/{uuid}/users/{user_id}:
    post:
      tags: [Organization Membership Management]
      summary: Add User to Organization
      operationId: addUserToOrganization
      description: Add a user as a member of the organization. Requires requester to be Root.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: User added to organization

  /v2/organizations/{uuid}/user/{user_id}/role:
    put:
      tags: [Organization Membership Management]
      summary: Change User Role in Organization
      operationId: changeUserRole
      description: Change the role of a user within the organization. Requires requester to be Root.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User role changed

  /v2/organizations/{uuid}/swap-root:
    put:
      tags: [Organization Membership Management]
      summary: Swap Root Ownership
      operationId: swapRootOwnership
      description: Promote a member to Root and demote the current Root to Member. Requires requester to be Root.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Root ownership swapped

  /v2/organizations/{uuid}/suspended-users:
    get:
      tags: [Organization Membership Management]
      summary: List Suspended Users
      operationId: listSuspendedUsers
      description: List all suspended users within the organization.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of suspended users

  # Organization Invitations
  /v2/organizations/invitations:
    get:
      tags: [Organization Invitations]
      summary: View Invitations Sent by Organization
      operationId: viewInvitationsSentByOrganization
      description: View all invitations sent by a specific organization. Only users with acl_manage_users permission can view invites.
      responses:
        '200':
          description: List of invitations sent by organization

  /v2/invitation/{invite_uuid}:
    get:
      tags: [Organization Invitations]
      summary: View Invitation
      operationId: viewInvitation
      description: View an invitation. Only users with acl_manage_users permission can view invites.
      parameters:
        - name: invite_uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invitation details

  /v2/invitation:
    post:
      tags: [Organization Invitations]
      summary: Invite a User to Join Organization
      operationId: inviteUserToOrganization
      description: Invite a user to join the organization. Only users with acl_manage_users permission can send invites. Cannot invite self. Prevents duplicate pending invitations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address the invitation should be sent to
                  example: "invited-person@example.org"
                permissions:
                  type: object
                  description: JSON definition of allowed/denied ACL
              required:
                - email
                - permissions
      responses:
        '201':
          description: Invitation created

  /v2/invitation/{invite_uuid}/resend:
    post:
      tags: [Organization Invitations]
      summary: Resend existing invitation to a User to Join Organization
      operationId: resendInviteUserToOrganization
      description: Resend existing invitation to a User to Join Organization. Only users with acl_manage_users permission can send invites. Existing invitation must be expired or rejected.
      parameters:
        - name: invite_uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invitation resent

  # SCIM Users
  /scim/v2/Users:
    post:
      tags: [SCIM Users]
      summary: Create a User
      operationId: createScimUser
      description: Create a new user within the organization under SCIM provisioning.
      responses:
        '201':
          description: User created
    get:
      tags: [SCIM Users]
      summary: List Users
      operationId: listScimUsers
      description: List all users provisioned under the organization.
      responses:
        '200':
          description: List of users

  /scim/v2/Users/{id}:
    get:
      tags: [SCIM Users]
      summary: Get a User
      operationId: getScimUser
      description: Retrieve a specific user by ID within the organization.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
    put:
      tags: [SCIM Users]
      summary: Update a User
      operationId: updateScimUser
      description: Replace a user's attributes (full update) under SCIM.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User updated
    patch:
      tags: [SCIM Users]
      summary: Patch User Attributes
      operationId: patchScimUser
      description: Perform a partial update on a user's attributes according to SCIM PATCH operations.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User attributes patched
    delete:
      tags: [SCIM Users]
      summary: Permanently Delete a User
      operationId: deleteScimUser
      description: Permanently delete a user. Restricted to Root Org Vultr users (admin-only action, not IdP-managed).
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User permanently deleted

  # SCIM Groups
  /scim/v2/Groups:
    post:
      tags: [SCIM Groups]
      summary: Create a Group (SCIM)
      operationId: createScimGroup
      description: Create a new group within the organization under SCIM provisioning.
      responses:
        '201':
          description: Group created
    get:
      tags: [SCIM Groups]
      summary: List Groups (SCIM)
      operationId: listScimGroups
      description: List all groups provisioned under the organization.
      responses:
        '200':
          description: List of groups

  /scim/v2/Groups/{id}:
    get:
      tags: [SCIM Groups]
      summary: Get Group (SCIM)
      operationId: getScimGroup
      description: Retrieve a specific group by ID within the organization.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group details
    put:
      tags: [SCIM Groups]
      summary: Update Group (SCIM)
      operationId: updateScimGroup
      description: Replace a group's attributes (full update) under SCIM.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group updated
    patch:
      tags: [SCIM Groups]
      summary: Patch Group (SCIM)
      operationId: patchScimGroup
      description: Perform a partial update on a group's attributes according to SCIM PATCH operations.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group attributes patched
    delete:
      tags: [SCIM Groups]
      summary: Delete Group (SCIM)
      operationId: deleteScimGroup
      description: Permanently delete a group. Restricted to Root Org Vultr users (admin-only action, not IdP-managed).
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Group permanently deleted

  # IAM Groups (non-SCIM)
  /v2/groups:
    get:
      tags: [IAM Groups]
      summary: List Groups
      operationId: listGroups
      description: List all IAM groups within the organization.
      responses:
        '200':
          description: List of groups
    post:
      tags: [IAM Groups]
      summary: Create Group
      operationId: createGroup
      description: Create a new IAM group within the organization.
      responses:
        '201':
          description: Group created

  /v2/groups/{id}:
    get:
      tags: [IAM Groups]
      summary: Get Group
      operationId: getGroup
      description: Retrieve a specific IAM group by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group details
    put:
      tags: [IAM Groups]
      summary: Update Group
      operationId: updateGroup
      description: Update an IAM group's attributes.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group updated
    delete:
      tags: [IAM Groups]
      summary: Delete Group
      operationId: deleteGroup
      description: Soft delete an IAM group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Group deleted

  /v2/groups/{id}/restore:
    patch:
      tags: [IAM Groups]
      summary: Restore Group
      operationId: restoreGroup
      description: Restore a previously soft-deleted IAM group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group restored

  /v2/groups/{id}/members:
    post:
      tags: [IAM Groups]
      summary: Add Member to Group
      operationId: addGroupMember
      description: Add a user to an IAM group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Member added to group

  /v2/groups/{id}/members/{user-id}:
    delete:
      tags: [IAM Groups]
      summary: Remove Member from Group
      operationId: removeGroupMember
      description: Remove a user from an IAM group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Member removed from group

  # IAM User-Policy Mappings
  /v2/users/{id}/policies:
    post:
      tags: [IAM User-Policy Mappings]
      summary: Attach Policy to User
      operationId: attachPolicyToUser
      description: Attach an IAM policy directly to a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy attached to user
    get:
      tags: [IAM User-Policy Mappings]
      summary: List Policies Attached to User
      operationId: listUserPolicies
      description: List all policies directly attached to a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of policies attached to user

  /v2/users/{id}/policies/{policy-id}:
    delete:
      tags: [IAM User-Policy Mappings]
      summary: Detach Policy from User
      operationId: detachPolicyFromUser
      description: Detach an IAM policy from a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: policy-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy detached from user

  # IAM Group-Policy Mappings
  /v2/groups/{id}/policies:
    post:
      tags: [IAM Group-Policy Mappings]
      summary: Attach Policy to Group
      operationId: attachPolicyToGroup
      description: Attach an IAM policy to a group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy attached to group
    get:
      tags: [IAM Group-Policy Mappings]
      summary: List Policies Attached to Group
      operationId: listGroupPolicies
      description: List all policies attached to a group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of policies attached to group

  /v2/groups/{id}/policies/{policy-id}:
    delete:
      tags: [IAM Group-Policy Mappings]
      summary: Detach Policy from Group
      operationId: detachPolicyFromGroup
      description: Detach an IAM policy from a group.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: policy-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy detached from group

  # IAM Roles
  /v2/roles:
    post:
      tags: [IAM Roles]
      summary: Create Role
      operationId: createRole
      description: Create a new IAM role within the organization.
      responses:
        '201':
          description: Role created
    get:
      tags: [IAM Roles]
      summary: List Roles
      operationId: listRoles
      description: List all IAM roles within the organization.
      responses:
        '200':
          description: List of roles

  /v2/roles/{id}:
    get:
      tags: [IAM Roles]
      summary: Get Role
      operationId: getRole
      description: Retrieve a specific IAM role by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role details
    put:
      tags: [IAM Roles]
      summary: Update Role
      operationId: updateRole
      description: Update an IAM role's attributes.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role updated
    delete:
      tags: [IAM Roles]
      summary: Delete Role
      operationId: deleteRole
      description: Soft delete an IAM role.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Role deleted

  /v2/roles/{id}/restore:
    patch:
      tags: [IAM Roles]
      summary: Restore Role
      operationId: restoreRole
      description: Restore a previously soft-deleted IAM role.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role restored

  /v2/roles/{id}/policies:
    post:
      tags: [IAM Role-Policy Mappings]
      summary: Attach Policy to Role
      operationId: attachPolicyToRole
      description: Attach an IAM policy to a role.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy attached to role
    get:
      tags: [IAM Role-Policy Mappings]
      summary: List Role Policies
      operationId: listRolePolicies
      description: List all policies attached to a role.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of policies attached to role

  /v2/roles/{id}/policies/{policy-id}:
    delete:
      tags: [IAM Role-Policy Mappings]
      summary: Detach Policy from Role
      operationId: detachPolicyFromRole
      description: Detach an IAM policy from a role.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: policy-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy detached from role

  # IAM Policies
  /v2/policies:
    post:
      tags: [IAM Policies]
      summary: Create Policy
      operationId: createPolicy
      description: Create a new IAM policy within the organization.
      responses:
        '201':
          description: Policy created
    get:
      tags: [IAM Policies]
      summary: List Policies
      operationId: listPolicies
      description: List all IAM policies within the organization.
      responses:
        '200':
          description: List of policies

  /v2/policies/{id}:
    get:
      tags: [IAM Policies]
      summary: Get Policy
      operationId: getPolicy
      description: Retrieve a specific IAM policy by ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy details
    put:
      tags: [IAM Policies]
      summary: Update Policy
      operationId: updatePolicy
      description: Update an IAM policy's attributes.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy updated
    delete:
      tags: [IAM Policies]
      summary: Delete Policy
      operationId: deletePolicy
      description: Soft delete an IAM policy.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy deleted

  /v2/policies/{id}/restore:
    patch:
      tags: [IAM Policies]
      summary: Restore Policy
      operationId: restorePolicy
      description: Restore a previously soft-deleted IAM policy.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy restored

  # IAM Role Trust Relationships
  /v2/role-trusts:
    post:
      tags: [IAM Trust Policies]
      summary: Create Role Trust
      operationId: createRoleTrust
      description: Create a trust relationship for role assumption.
      responses:
        '201':
          description: Role trust created
    get:
      tags: [IAM Trust Policies]
      summary: List Role Trusts
      operationId: listRoleTrusts
      description: List all role trust relationships.
      responses:
        '200':
          description: List of role trusts

  /v2/role-trusts/{id}:
    get:
      tags: [IAM Trust Policies]
      summary: Get Role Trust
      operationId: getRoleTrust
      description: Retrieve a specific role trust relationship.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role trust details
    put:
      tags: [IAM Trust Policies]
      summary: Update Role Trust
      operationId: updateRoleTrust
      description: Update a role trust relationship.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role trust updated
    delete:
      tags: [IAM Trust Policies]
      summary: Delete Role Trust
      operationId: deleteRoleTrust
      description: Delete a role trust relationship.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Role trust deleted

  /v2/role-trusts/{id}/restore:
    patch:
      tags: [IAM Trust Policies]
      summary: Restore Role Trust
      operationId: restoreRoleTrust
      description: Restore a previously deleted role trust relationship.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role trust restored

  /v2/role-trusts/by-role/{role-id}:
    get:
      tags: [IAM Trust Policies]
      summary: List Role Trusts by Role
      operationId: listRoleTrustsByRole
      description: List all trust relationships for a specific role.
      parameters:
        - name: role-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of role trusts for the specified role

  /v2/role-trusts/assumable/{user-id}:
    get:
      tags: [IAM Trust Policies]
      summary: List Assumable Roles
      operationId: listAssumableRoles
      description: List all roles that can be assumed by a specific user.
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of assumable roles

  # IAM Assumed Roles (Active Sessions)
  /v2/assumed-roles/assume:
    post:
      tags: [IAM Assumed Roles]
      summary: Assume Role (Create Session)
      operationId: createAssumedRoleSession
      description: Create a new assumed role session.
      responses:
        '201':
          description: Assumed role session created

  /v2/assumed-roles/{session-token}:
    get:
      tags: [IAM Assumed Roles]
      summary: Get Assumed Role Session
      operationId: getAssumedRoleSession
      description: Retrieve details of an assumed role session.
      parameters:
        - name: session-token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Assumed role session details

  /v2/assumed-roles/active:
    get:
      tags: [IAM Assumed Roles]
      summary: List Active Sessions
      operationId: listActiveSessions
      description: List all active assumed role sessions for the current user.
      responses:
        '200':
          description: List of active sessions

  /v2/assumed-roles/{session-token}/revoke:
    post:
      tags: [IAM Assumed Roles]
      summary: Revoke Assumed Role Session
      operationId: revokeAssumedRoleSession
      description: Revoke an active assumed role session.
      parameters:
        - name: session-token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session revoked

  # IAM Endpoint Action Maps
  /v2/endpoint-action-maps:
    get:
      tags: [IAM Endpoint Actions]
      summary: List Endpoint Action Maps
      operationId: listEndpointActionMaps
      description: List all endpoint-to-action mappings.
      responses:
        '200':
          description: List of endpoint action maps

  /v2/endpoint-action-maps/available-actions:
    get:
      tags: [IAM Endpoint Actions]
      summary: Get Available Actions
      operationId: getAvailableActions
      description: Retrieve all available actions that can be used in policies.
      responses:
        '200':
          description: List of available actions

  /v2/endpoint-action-maps/{id}:
    get:
      tags: [IAM Endpoint Actions]
      summary: Get Endpoint Action Map
      operationId: getEndpointActionMap
      description: Retrieve a specific endpoint action mapping.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Endpoint action map details